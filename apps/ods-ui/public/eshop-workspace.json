{
	"id": "e_shop",
	"name": "eShop",
	"description": "DDD workspace for the current dotnet/eShop reference app (.NET 9, .NET Aspire).",
	"version": "0.2.1",
	"odsVersion": "1.0.0",
	"primaryColor": "#2563eb",
	"domains": {
		"commerce": {
			"name": "Commerce",
			"description": "Core e-commerce capabilities (catalog, basket, ordering).",
			"type": "core",
			"subdomains": {
				"catalog": {
					"name": "Catalog",
					"description": "Manage and query product catalog.",
					"boundedcontexts": {
						"catalog": {
							"name": "Catalog",
							"description": "Minimal API for catalog queries and management.",
							"aggregates": {
								"catalog_item": {
									"name": "CatalogItem",
									"description": "Sellable product item.",
									"provides": {},
									"consumes": [],
									"entities": {
										"catalog_item": {
											"name": "CatalogItem",
											"description": "Catalog item root with price and stock.",
											"root": true,
											"relations": [
												{
													"target": {
														"$ref": "#/domains/commerce/subdomains/catalog/boundedcontexts/catalog/aggregates/catalog_item/valueobjects/sku"
													},
													"relation": "uses",
													"label": "identified by"
												},
												{
													"target": {
														"$ref": "#/domains/commerce/subdomains/catalog/boundedcontexts/catalog/aggregates/catalog_item/valueobjects/money"
													},
													"relation": "uses",
													"label": "priced in"
												}
											]
										}
									},
									"valueobjects": {
										"sku": {
											"name": "Sku",
											"description": "Stock-keeping unit.",
											"relations": []
										},
										"money": {
											"name": "Money",
											"description": "Amount + currency.",
											"relations": []
										}
									},
									"invariants": {}
								}
							},
							"services": {
								"catalog_service": {
									"name": "CatalogService",
									"description": "Catalog application service (HTTP).",
									"type": "application",
									"provides": {
										"get_catalog_items": {
											"name": "GetCatalogItems",
											"description": "Browse/search catalog items.",
											"pattern": "open-host-service",
											"type": "operation"
										},
										"change_price": {
											"name": "ChangePrice",
											"description": "Admin operation to change item price.",
											"pattern": "open-host-service",
											"type": "operation"
										}
									},
									"consumes": []
								}
							}
						}
					}
				},
				"basket": {
					"name": "Basket",
					"description": "Shopping basket management.",
					"boundedcontexts": {
						"basket": {
							"name": "Basket",
							"description": "Basket service (gRPC/HTTP) to manage user baskets.",
							"aggregates": {
								"basket": {
									"name": "Basket",
									"description": "Customer basket.",
									"provides": {},
									"consumes": [],
									"entities": {
										"basket": {
											"name": "Basket",
											"description": "Basket root with items and user ownership.",
											"root": true,
											"relations": [
												{
													"target": {
														"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/aggregates/basket/valueobjects/basket_item"
													},
													"relation": "uses",
													"label": "contains"
												}
											]
										}
									},
									"valueobjects": {
										"basket_item": {
											"name": "BasketItem",
											"description": "ProductId, quantity, unit price snapshot.",
											"relations": []
										}
									},
									"invariants": {}
								}
							},
							"services": {
								"basket_service": {
									"name": "BasketService",
									"description": "Basket application service.",
									"type": "application",
									"provides": {
										"get_basket": {
											"name": "GetBasket",
											"description": "Fetch basket by user.",
											"pattern": "open-host-service",
											"type": "operation"
										},
										"add_item": {
											"name": "AddItem",
											"description": "Add/merge an item into basket.",
											"pattern": "open-host-service",
											"type": "operation"
										},
										"clear_basket": {
											"name": "ClearBasket",
											"description": "Remove all items from basket.",
											"pattern": "open-host-service",
											"type": "operation"
										}
									},
									"consumes": []
								}
							}
						}
					}
				},
				"ordering": {
					"name": "Ordering",
					"description": "Order lifecycle and payments coordination.",
					"boundedcontexts": {
						"ordering": {
							"name": "Ordering",
							"description": "Order lifecycle, status and events.",
							"aggregates": {
								"order": {
									"name": "Order",
									"description": "Order aggregate with status transitions.",
									"provides": {},
									"consumes": [],
									"entities": {
										"order": {
											"name": "Order",
											"description": "Order header.",
											"root": true,
											"relations": [
												{
													"target": {
														"$ref": "#/domains/commerce/subdomains/ordering/boundedcontexts/ordering/aggregates/order/valueobjects/order_id"
													},
													"relation": "uses",
													"label": "identified by"
												},
												{
													"target": {
														"$ref": "#/domains/commerce/subdomains/ordering/boundedcontexts/ordering/aggregates/order/valueobjects/money"
													},
													"relation": "uses",
													"label": "totals"
												}
											]
										}
									},
									"valueobjects": {
										"order_id": {
											"name": "OrderId",
											"description": "Order identifier.",
											"relations": []
										},
										"money": {
											"name": "Money",
											"description": "Totals & fees.",
											"relations": []
										}
									},
									"invariants": {
										"totals_non_negative": {
											"name": "TotalsNonNegative",
											"description": "Order totals must be >= 0."
										}
									}
								}
							},
							"services": {
								"ordering_service": {
									"name": "OrderingService",
									"description": "Ordering application service.",
									"type": "application",
									"provides": {
										"place_order": {
											"name": "PlaceOrder",
											"description": "Create an order from a valid basket.",
											"pattern": "open-host-service",
											"type": "operation"
										},
										"order_paid": {
											"name": "OrderPaid",
											"description": "Integration event when an order is marked paid.",
											"pattern": "published-language",
											"type": "event"
										}
									},
									"consumes": [
										{
											"consumable": {
												"$ref": "#/domains/payment_processing/subdomains/payment_processors/boundedcontexts/payment_processor/services/payment_service/provides/process_payment"
											},
											"pattern": "customer-supplier"
										},
										{
											"consumable": {
												"$ref": "#/domains/payment_processing/subdomains/payment_processors/boundedcontexts/payment_processor/services/payment_service/provides/payment_succeeded"
											},
											"pattern": "conformist"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"identity_&_access": {
			"name": "Identity & Access",
			"description": "Authentication/authorization via Duende IdentityServer.",
			"type": "supporting",
			"subdomains": {
				"auth_n_and_auth_z": {
					"name": "AuthN and AuthZ",
					"description": "OpenID Connect identity provider.",
					"boundedcontexts": {
						"identity": {
							"name": "Identity",
							"description": "Identity provider (Duende IdentityServer / OIDC).",
							"aggregates": {},
							"services": {
								"identity_service": {
									"name": "IdentityService",
									"description": "Token service for authN/authZ.",
									"type": "application",
									"provides": {
										"issue_token": {
											"name": "IssueToken",
											"description": "Obtain access/id tokens via OIDC flows.",
											"pattern": "open-host-service",
											"type": "operation"
										}
									},
									"consumes": []
								}
							}
						}
					}
				}
			}
		},
		"api_integration": {
			"name": "API Integration",
			"description": "Cross-cutting integration (webhooks, external processors).",
			"type": "supporting",
			"subdomains": {
				"webhooks": {
					"name": "Webhooks",
					"description": "Webhook registration and event delivery.",
					"boundedcontexts": {
						"webhooks": {
							"name": "Webhooks",
							"description": "Register webhooks and deliver order events to subscribers.",
							"aggregates": {},
							"services": {
								"webhooks_service": {
									"name": "WebhooksService",
									"description": "Webhook registration/delivery application service.",
									"type": "application",
									"provides": {
										"register_webhook": {
											"name": "RegisterWebhook",
											"description": "Register a webhook endpoint for an event (e.g., OrderPaid).",
											"pattern": "open-host-service",
											"type": "operation"
										}
									},
									"consumes": [
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/ordering/boundedcontexts/ordering/services/ordering_service/provides/order_paid"
											},
											"pattern": "conformist"
										},
										{
											"consumable": {
												"$ref": "#/domains/api_integration/subdomains/webhooks/boundedcontexts/webhook_client/services/webhook_receiver/provides/receive_webhook"
											},
											"pattern": "customer-supplier"
										}
									]
								}
							}
						},
						"webhook_client": {
							"name": "WebhookClient",
							"description": "Sample receiver app for incoming webhook deliveries.",
							"aggregates": {},
							"services": {
								"webhook_receiver": {
									"name": "WebhookReceiver",
									"description": "Receives webhook POSTs.",
									"type": "application",
									"provides": {
										"receive_webhook": {
											"name": "ReceiveWebhook",
											"description": "Endpoint to receive webhook deliveries.",
											"pattern": "open-host-service",
											"type": "operation"
										}
									},
									"consumes": [
										{
											"consumable": {
												"$ref": "#/domains/api_integration/subdomains/webhooks/boundedcontexts/webhooks/services/webhooks_service/provides/register_webhook"
											},
											"pattern": "customer-supplier"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"payment_processing": {
			"name": "Payment Processing",
			"description": "External payment processor integration.",
			"type": "supporting",
			"subdomains": {
				"payment_processors": {
					"name": "Payment Processors",
					"description": "Background processors that integrate with external systems.",
					"boundedcontexts": {
						"payment_processor": {
							"name": "PaymentProcessor",
							"description": "Simulated external payment processor.",
							"aggregates": {},
							"services": {
								"payment_service": {
									"name": "PaymentService",
									"description": "Takes payments and emits status changes.",
									"type": "application",
									"provides": {
										"process_payment": {
											"name": "ProcessPayment",
											"description": "Process/authorize payment for an order.",
											"pattern": "open-host-service",
											"type": "operation"
										},
										"payment_succeeded": {
											"name": "PaymentSucceeded",
											"description": "Integration event when a payment is successful.",
											"pattern": "published-language",
											"type": "event"
										}
									},
									"consumes": []
								}
							}
						}
					}
				}
			}
		},
		"edge_&_experience": {
			"name": "Edge & Experience",
			"description": "Customer-facing web app and mobile BFF.",
			"type": "supporting",
			"subdomains": {
				"web": {
					"name": "Web",
					"description": "Blazor web UI for customers.",
					"boundedcontexts": {
						"web": {
							"name": "Web",
							"description": "Blazor Server web app for customers.",
							"aggregates": {},
							"services": {
								"web_app": {
									"name": "WebApp",
									"description": "Customer-facing web application.",
									"type": "application",
									"provides": {},
									"consumes": [
										{
											"consumable": {
												"$ref": "#/domains/identity_&_access/subdomains/auth_n_and_auth_z/boundedcontexts/identity/services/identity_service/provides/issue_token"
											},
											"pattern": "customer-supplier"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/catalog/boundedcontexts/catalog/services/catalog_service/provides/get_catalog_items"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/services/basket_service/provides/get_basket"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/services/basket_service/provides/add_item"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/services/basket_service/provides/clear_basket"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/ordering/boundedcontexts/ordering/services/ordering_service/provides/place_order"
											},
											"pattern": "anti-corruption-layer"
										}
									]
								}
							}
						}
					}
				},
				"mobile": {
					"name": "Mobile",
					"description": "Mobile BFF/aggregator for shopping flows.",
					"boundedcontexts": {
						"mobile_bff": {
							"name": "Mobile BFF",
							"description": "BFF that aggregates catalog/basket/ordering.",
							"aggregates": {},
							"services": {
								"shopping_bff": {
									"name": "ShoppingBff",
									"description": "Aggregation endpoints for shopping journeys.",
									"type": "application",
									"provides": {},
									"consumes": [
										{
											"consumable": {
												"$ref": "#/domains/identity_&_access/subdomains/auth_n_and_auth_z/boundedcontexts/identity/services/identity_service/provides/issue_token"
											},
											"pattern": "customer-supplier"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/catalog/boundedcontexts/catalog/services/catalog_service/provides/get_catalog_items"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/services/basket_service/provides/get_basket"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/services/basket_service/provides/add_item"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/basket/boundedcontexts/basket/services/basket_service/provides/clear_basket"
											},
											"pattern": "anti-corruption-layer"
										},
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/ordering/boundedcontexts/ordering/services/ordering_service/provides/place_order"
											},
											"pattern": "anti-corruption-layer"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"operations": {
			"name": "Operations",
			"description": "Backoffice and admin operations.",
			"type": "supporting",
			"subdomains": {
				"backoffice": {
					"name": "Backoffice",
					"description": "Admin/ops touchpoints (price updates, etc.).",
					"boundedcontexts": {
						"backoffice_app": {
							"name": "BackofficeApp",
							"description": "Admin/demo app for price updates.",
							"aggregates": {},
							"services": {
								"backoffice": {
									"name": "Backoffice",
									"description": "Uses open-host operations for admin workflows.",
									"type": "application",
									"provides": {},
									"consumes": [
										{
											"consumable": {
												"$ref": "#/domains/commerce/subdomains/catalog/boundedcontexts/catalog/services/catalog_service/provides/change_price"
											},
											"pattern": "customer-supplier"
										}
									]
								}
							}
						}
					}
				}
			}
		}
	},
	"homepage": "https://github.com/dotnet/eShop",
	"logoUrl": "https://cdn-icons-png.flaticon.com/512/1162/1162456.png"
}
